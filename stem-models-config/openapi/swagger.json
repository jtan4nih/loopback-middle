{"swagger":"2.0","info":{"version":"1.0.0","title":"stem2"},"basePath":"/api","consumes":["application/json","application/x-www-form-urlencoded","application/xml","text/xml"],"produces":["application/json","application/xml","text/xml","application/javascript","text/javascript"],"paths":{"/Achievements":{"post":{"tags":["Achievements"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"Achievements.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"$ref":"#/definitions/Achievements"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Achievements"}}},"deprecated":false},"put":{"tags":["Achievements"],"summary":"Update an existing model instance or insert a new one into the data source.","operationId":"Achievements.upsert","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"$ref":"#/definitions/Achievements"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Achievements"}}},"deprecated":false},"get":{"tags":["Achievements"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"Achievements.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/Achievements"}}}},"deprecated":false}},"/Achievements/{id}/exists":{"get":{"tags":["Achievements"],"summary":"Check whether a model instance exists in the data source.","operationId":"Achievements.exists__get_Achievements_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false}},"/Achievements/{id}":{"head":{"tags":["Achievements"],"summary":"Check whether a model instance exists in the data source.","operationId":"Achievements.exists__head_Achievements_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"get":{"tags":["Achievements"],"summary":"Find a model instance by id from the data source.","operationId":"Achievements.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Achievements"}}},"deprecated":false},"delete":{"tags":["Achievements"],"summary":"Delete a model instance by id from the data source.","operationId":"Achievements.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"put":{"tags":["Achievements"],"summary":"Update attributes for a model instance and persist it into the data source.","operationId":"Achievements.prototype.updateAttributes","parameters":[{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"$ref":"#/definitions/Achievements"}},{"name":"id","in":"path","description":"PersistedModel id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Achievements"}}},"deprecated":false}},"/Achievements/findOne":{"get":{"tags":["Achievements"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"Achievements.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Achievements"}}},"deprecated":false}},"/Achievements/update":{"post":{"tags":["Achievements"],"summary":"Update instances of the model matched by where from the data source.","operationId":"Achievements.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"$ref":"#/definitions/Achievements"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"The number of instances updated","type":"object"}}},"deprecated":false}},"/Achievements/count":{"get":{"tags":["Achievements"],"summary":"Count instances of the model matched by where from the data source.","operationId":"Achievements.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false}},"/Achievements/change-stream":{"post":{"tags":["Achievements"],"summary":"Create a change stream.","operationId":"Achievements.createChangeStream__post_Achievements_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"get":{"tags":["Achievements"],"summary":"Create a change stream.","operationId":"Achievements.createChangeStream__get_Achievements_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false}},"/Flags":{"post":{"tags":["Flags"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"Flags.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"$ref":"#/definitions/Flags"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Flags"}}},"deprecated":false},"put":{"tags":["Flags"],"summary":"Update an existing model instance or insert a new one into the data source.","operationId":"Flags.upsert","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"$ref":"#/definitions/Flags"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Flags"}}},"deprecated":false},"get":{"tags":["Flags"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"Flags.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/Flags"}}}},"deprecated":false}},"/Flags/{id}/exists":{"get":{"tags":["Flags"],"summary":"Check whether a model instance exists in the data source.","operationId":"Flags.exists__get_Flags_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false}},"/Flags/{id}":{"head":{"tags":["Flags"],"summary":"Check whether a model instance exists in the data source.","operationId":"Flags.exists__head_Flags_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"get":{"tags":["Flags"],"summary":"Find a model instance by id from the data source.","operationId":"Flags.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Flags"}}},"deprecated":false},"delete":{"tags":["Flags"],"summary":"Delete a model instance by id from the data source.","operationId":"Flags.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"put":{"tags":["Flags"],"summary":"Update attributes for a model instance and persist it into the data source.","operationId":"Flags.prototype.updateAttributes","parameters":[{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"$ref":"#/definitions/Flags"}},{"name":"id","in":"path","description":"PersistedModel id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Flags"}}},"deprecated":false}},"/Flags/findOne":{"get":{"tags":["Flags"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"Flags.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Flags"}}},"deprecated":false}},"/Flags/update":{"post":{"tags":["Flags"],"summary":"Update instances of the model matched by where from the data source.","operationId":"Flags.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"$ref":"#/definitions/Flags"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"The number of instances updated","type":"object"}}},"deprecated":false}},"/Flags/count":{"get":{"tags":["Flags"],"summary":"Count instances of the model matched by where from the data source.","operationId":"Flags.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false}},"/Flags/change-stream":{"post":{"tags":["Flags"],"summary":"Create a change stream.","operationId":"Flags.createChangeStream__post_Flags_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"get":{"tags":["Flags"],"summary":"Create a change stream.","operationId":"Flags.createChangeStream__get_Flags_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false}},"/Goals":{"post":{"tags":["Goals"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"Goals.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"$ref":"#/definitions/Goals"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Goals"}}},"deprecated":false},"put":{"tags":["Goals"],"summary":"Update an existing model instance or insert a new one into the data source.","operationId":"Goals.upsert","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"$ref":"#/definitions/Goals"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Goals"}}},"deprecated":false},"get":{"tags":["Goals"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"Goals.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/Goals"}}}},"deprecated":false}},"/Goals/{id}/exists":{"get":{"tags":["Goals"],"summary":"Check whether a model instance exists in the data source.","operationId":"Goals.exists__get_Goals_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false}},"/Goals/{id}":{"head":{"tags":["Goals"],"summary":"Check whether a model instance exists in the data source.","operationId":"Goals.exists__head_Goals_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"get":{"tags":["Goals"],"summary":"Find a model instance by id from the data source.","operationId":"Goals.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Goals"}}},"deprecated":false},"delete":{"tags":["Goals"],"summary":"Delete a model instance by id from the data source.","operationId":"Goals.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"put":{"tags":["Goals"],"summary":"Update attributes for a model instance and persist it into the data source.","operationId":"Goals.prototype.updateAttributes","parameters":[{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"$ref":"#/definitions/Goals"}},{"name":"id","in":"path","description":"PersistedModel id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Goals"}}},"deprecated":false}},"/Goals/findOne":{"get":{"tags":["Goals"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"Goals.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Goals"}}},"deprecated":false}},"/Goals/update":{"post":{"tags":["Goals"],"summary":"Update instances of the model matched by where from the data source.","operationId":"Goals.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"$ref":"#/definitions/Goals"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"The number of instances updated","type":"object"}}},"deprecated":false}},"/Goals/count":{"get":{"tags":["Goals"],"summary":"Count instances of the model matched by where from the data source.","operationId":"Goals.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false}},"/Goals/change-stream":{"post":{"tags":["Goals"],"summary":"Create a change stream.","operationId":"Goals.createChangeStream__post_Goals_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"get":{"tags":["Goals"],"summary":"Create a change stream.","operationId":"Goals.createChangeStream__get_Goals_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false}},"/Messages":{"post":{"tags":["Messages"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"Messages.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"$ref":"#/definitions/Messages"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Messages"}}},"deprecated":false},"put":{"tags":["Messages"],"summary":"Update an existing model instance or insert a new one into the data source.","operationId":"Messages.upsert","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"$ref":"#/definitions/Messages"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Messages"}}},"deprecated":false},"get":{"tags":["Messages"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"Messages.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/Messages"}}}},"deprecated":false}},"/Messages/{id}/exists":{"get":{"tags":["Messages"],"summary":"Check whether a model instance exists in the data source.","operationId":"Messages.exists__get_Messages_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false}},"/Messages/{id}":{"head":{"tags":["Messages"],"summary":"Check whether a model instance exists in the data source.","operationId":"Messages.exists__head_Messages_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"get":{"tags":["Messages"],"summary":"Find a model instance by id from the data source.","operationId":"Messages.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Messages"}}},"deprecated":false},"delete":{"tags":["Messages"],"summary":"Delete a model instance by id from the data source.","operationId":"Messages.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"put":{"tags":["Messages"],"summary":"Update attributes for a model instance and persist it into the data source.","operationId":"Messages.prototype.updateAttributes","parameters":[{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"$ref":"#/definitions/Messages"}},{"name":"id","in":"path","description":"PersistedModel id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Messages"}}},"deprecated":false}},"/Messages/findOne":{"get":{"tags":["Messages"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"Messages.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Messages"}}},"deprecated":false}},"/Messages/update":{"post":{"tags":["Messages"],"summary":"Update instances of the model matched by where from the data source.","operationId":"Messages.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"$ref":"#/definitions/Messages"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"The number of instances updated","type":"object"}}},"deprecated":false}},"/Messages/count":{"get":{"tags":["Messages"],"summary":"Count instances of the model matched by where from the data source.","operationId":"Messages.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false}},"/Messages/change-stream":{"post":{"tags":["Messages"],"summary":"Create a change stream.","operationId":"Messages.createChangeStream__post_Messages_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"get":{"tags":["Messages"],"summary":"Create a change stream.","operationId":"Messages.createChangeStream__get_Messages_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false}},"/Points":{"post":{"tags":["Points"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"Points.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"$ref":"#/definitions/Points"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Points"}}},"deprecated":false},"put":{"tags":["Points"],"summary":"Update an existing model instance or insert a new one into the data source.","operationId":"Points.upsert","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"$ref":"#/definitions/Points"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Points"}}},"deprecated":false},"get":{"tags":["Points"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"Points.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/Points"}}}},"deprecated":false}},"/Points/{id}/exists":{"get":{"tags":["Points"],"summary":"Check whether a model instance exists in the data source.","operationId":"Points.exists__get_Points_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false}},"/Points/{id}":{"head":{"tags":["Points"],"summary":"Check whether a model instance exists in the data source.","operationId":"Points.exists__head_Points_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"get":{"tags":["Points"],"summary":"Find a model instance by id from the data source.","operationId":"Points.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Points"}}},"deprecated":false},"delete":{"tags":["Points"],"summary":"Delete a model instance by id from the data source.","operationId":"Points.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"put":{"tags":["Points"],"summary":"Update attributes for a model instance and persist it into the data source.","operationId":"Points.prototype.updateAttributes","parameters":[{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"$ref":"#/definitions/Points"}},{"name":"id","in":"path","description":"PersistedModel id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Points"}}},"deprecated":false}},"/Points/findOne":{"get":{"tags":["Points"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"Points.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Points"}}},"deprecated":false}},"/Points/update":{"post":{"tags":["Points"],"summary":"Update instances of the model matched by where from the data source.","operationId":"Points.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"$ref":"#/definitions/Points"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"The number of instances updated","type":"object"}}},"deprecated":false}},"/Points/count":{"get":{"tags":["Points"],"summary":"Count instances of the model matched by where from the data source.","operationId":"Points.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false}},"/Points/change-stream":{"post":{"tags":["Points"],"summary":"Create a change stream.","operationId":"Points.createChangeStream__post_Points_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"get":{"tags":["Points"],"summary":"Create a change stream.","operationId":"Points.createChangeStream__get_Points_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false}},"/Powerups":{"post":{"tags":["Powerups"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"Powerups.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"$ref":"#/definitions/Powerups"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Powerups"}}},"deprecated":false},"put":{"tags":["Powerups"],"summary":"Update an existing model instance or insert a new one into the data source.","operationId":"Powerups.upsert","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"$ref":"#/definitions/Powerups"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Powerups"}}},"deprecated":false},"get":{"tags":["Powerups"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"Powerups.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/Powerups"}}}},"deprecated":false}},"/Powerups/{id}/exists":{"get":{"tags":["Powerups"],"summary":"Check whether a model instance exists in the data source.","operationId":"Powerups.exists__get_Powerups_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false}},"/Powerups/{id}":{"head":{"tags":["Powerups"],"summary":"Check whether a model instance exists in the data source.","operationId":"Powerups.exists__head_Powerups_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"get":{"tags":["Powerups"],"summary":"Find a model instance by id from the data source.","operationId":"Powerups.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Powerups"}}},"deprecated":false},"delete":{"tags":["Powerups"],"summary":"Delete a model instance by id from the data source.","operationId":"Powerups.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"put":{"tags":["Powerups"],"summary":"Update attributes for a model instance and persist it into the data source.","operationId":"Powerups.prototype.updateAttributes","parameters":[{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"$ref":"#/definitions/Powerups"}},{"name":"id","in":"path","description":"PersistedModel id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Powerups"}}},"deprecated":false}},"/Powerups/findOne":{"get":{"tags":["Powerups"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"Powerups.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Powerups"}}},"deprecated":false}},"/Powerups/update":{"post":{"tags":["Powerups"],"summary":"Update instances of the model matched by where from the data source.","operationId":"Powerups.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"$ref":"#/definitions/Powerups"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"The number of instances updated","type":"object"}}},"deprecated":false}},"/Powerups/count":{"get":{"tags":["Powerups"],"summary":"Count instances of the model matched by where from the data source.","operationId":"Powerups.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false}},"/Powerups/change-stream":{"post":{"tags":["Powerups"],"summary":"Create a change stream.","operationId":"Powerups.createChangeStream__post_Powerups_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"get":{"tags":["Powerups"],"summary":"Create a change stream.","operationId":"Powerups.createChangeStream__get_Powerups_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false}},"/Threads":{"post":{"tags":["Threads"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"Threads.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"$ref":"#/definitions/Threads"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Threads"}}},"deprecated":false},"put":{"tags":["Threads"],"summary":"Update an existing model instance or insert a new one into the data source.","operationId":"Threads.upsert","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"$ref":"#/definitions/Threads"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Threads"}}},"deprecated":false},"get":{"tags":["Threads"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"Threads.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/Threads"}}}},"deprecated":false}},"/Threads/{id}/exists":{"get":{"tags":["Threads"],"summary":"Check whether a model instance exists in the data source.","operationId":"Threads.exists__get_Threads_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false}},"/Threads/{id}":{"head":{"tags":["Threads"],"summary":"Check whether a model instance exists in the data source.","operationId":"Threads.exists__head_Threads_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"get":{"tags":["Threads"],"summary":"Find a model instance by id from the data source.","operationId":"Threads.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Threads"}}},"deprecated":false},"delete":{"tags":["Threads"],"summary":"Delete a model instance by id from the data source.","operationId":"Threads.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"put":{"tags":["Threads"],"summary":"Update attributes for a model instance and persist it into the data source.","operationId":"Threads.prototype.updateAttributes","parameters":[{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"$ref":"#/definitions/Threads"}},{"name":"id","in":"path","description":"PersistedModel id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Threads"}}},"deprecated":false}},"/Threads/findOne":{"get":{"tags":["Threads"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"Threads.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Threads"}}},"deprecated":false}},"/Threads/update":{"post":{"tags":["Threads"],"summary":"Update instances of the model matched by where from the data source.","operationId":"Threads.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"$ref":"#/definitions/Threads"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"The number of instances updated","type":"object"}}},"deprecated":false}},"/Threads/count":{"get":{"tags":["Threads"],"summary":"Count instances of the model matched by where from the data source.","operationId":"Threads.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false}},"/Threads/change-stream":{"post":{"tags":["Threads"],"summary":"Create a change stream.","operationId":"Threads.createChangeStream__post_Threads_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"get":{"tags":["Threads"],"summary":"Create a change stream.","operationId":"Threads.createChangeStream__get_Threads_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false}},"/Users":{"post":{"tags":["Users"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"Users.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"$ref":"#/definitions/Users"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Users"}}},"deprecated":false},"put":{"tags":["Users"],"summary":"Update an existing model instance or insert a new one into the data source.","operationId":"Users.upsert","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"$ref":"#/definitions/Users"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Users"}}},"deprecated":false},"get":{"tags":["Users"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"Users.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/Users"}}}},"deprecated":false}},"/Users/{id}/exists":{"get":{"tags":["Users"],"summary":"Check whether a model instance exists in the data source.","operationId":"Users.exists__get_Users_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false}},"/Users/{id}":{"head":{"tags":["Users"],"summary":"Check whether a model instance exists in the data source.","operationId":"Users.exists__head_Users_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"get":{"tags":["Users"],"summary":"Find a model instance by id from the data source.","operationId":"Users.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Users"}}},"deprecated":false},"delete":{"tags":["Users"],"summary":"Delete a model instance by id from the data source.","operationId":"Users.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"put":{"tags":["Users"],"summary":"Update attributes for a model instance and persist it into the data source.","operationId":"Users.prototype.updateAttributes","parameters":[{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"$ref":"#/definitions/Users"}},{"name":"id","in":"path","description":"PersistedModel id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Users"}}},"deprecated":false}},"/Users/findOne":{"get":{"tags":["Users"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"Users.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Users"}}},"deprecated":false}},"/Users/update":{"post":{"tags":["Users"],"summary":"Update instances of the model matched by where from the data source.","operationId":"Users.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"$ref":"#/definitions/Users"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"The number of instances updated","type":"object"}}},"deprecated":false}},"/Users/count":{"get":{"tags":["Users"],"summary":"Count instances of the model matched by where from the data source.","operationId":"Users.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false}},"/Users/change-stream":{"post":{"tags":["Users"],"summary":"Create a change stream.","operationId":"Users.createChangeStream__post_Users_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"get":{"tags":["Users"],"summary":"Create a change stream.","operationId":"Users.createChangeStream__get_Users_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false}},"/Users/login":{"post":{"tags":["Users"],"operationId":"Users.isAuthenticated","parameters":[{"name":"userId","in":"formData","required":false,"type":"string"},{"name":"password","in":"formData","required":false,"type":"string"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false}}},"definitions":{"Achievements":{"properties":{"id":{"type":"number","format":"double"},"type":{"maxLength":80,"type":"string"},"description":{"maxLength":80,"type":"string"},"image":{"maxLength":80,"type":"string"},"title":{"maxLength":80,"type":"string"},"threshold":{"type":"number","format":"double"},"state":{"maxLength":80,"type":"string"}},"required":["id","type","image","title","threshold","state"],"additionalProperties":false},"x-any":{"properties":{}},"Flags":{"properties":{"id":{"type":"number","format":"double"},"subject":{"maxLength":80,"type":"string"},"description":{"maxLength":2000,"type":"string"},"state":{"type":"number","format":"double"},"owner":{"type":"number","format":"double"}},"required":["id","subject","state","owner"],"additionalProperties":false},"Goals":{"properties":{"id":{"type":"number","format":"double"},"subject":{"maxLength":80,"type":"string"},"description":{"maxLength":2000,"type":"string"},"owner":{"type":"number","format":"double"}},"required":["id","subject","owner"],"additionalProperties":false},"Messages":{"properties":{"id":{"type":"number","format":"double"},"subject":{"maxLength":2000,"type":"string"},"text":{"maxLength":2000,"type":"string"},"createdat":{"type":"string","format":"date"},"updatedat":{"type":"string","format":"date"},"state":{"maxLength":80,"type":"string"},"type":{"maxLength":80,"type":"string"},"owner":{"type":"number","format":"double"}},"required":["id","subject","createdat","state","type","owner"],"additionalProperties":false},"Points":{"properties":{"id":{"type":"number","format":"double"},"upvotes":{"maxLength":80,"type":"string"},"powerupscompletion":{"maxLength":80,"type":"string"},"topicstarted":{"maxLength":80,"type":"string"},"commentsadded":{"maxLength":80,"type":"string"}},"required":["id","upvotes","topicstarted","commentsadded"],"additionalProperties":false},"Powerups":{"properties":{"id":{"type":"number","format":"double"},"title":{"maxLength":80,"type":"string"},"what":{"maxLength":2000,"type":"string"},"how":{"maxLength":2000,"type":"string"},"category":{"maxLength":80,"type":"string"},"subcategory":{"maxLength":80,"type":"string"},"state":{"maxLength":80,"type":"string"},"relativeday":{"type":"number","format":"double"}},"required":["id","title","what","how","category","subcategory","state"],"additionalProperties":false},"Threads":{"properties":{"id":{"type":"number","format":"double"},"messages":{"type":"number","format":"double"}},"required":["id","messages"],"additionalProperties":false},"Users":{"properties":{"id":{"type":"number","format":"double"},"name":{"maxLength":80,"type":"string"},"studyid":{"maxLength":80,"type":"string"},"interests":{"maxLength":2000,"type":"string"},"transplantdate":{"type":"string","format":"date"},"startdate":{"type":"string","format":"date"},"avatar":{"maxLength":80,"type":"string"},"state":{"type":"number","format":"double"},"powerupsid":{"type":"number","format":"double"},"pointsid":{"type":"number","format":"double"},"achievementsid":{"type":"number","format":"double"}},"required":["id","name","studyid","startdate","powerupsid","pointsid","achievementsid"],"additionalProperties":false}},"tags":[{"name":"Achievements"},{"name":"Flags"},{"name":"Goals"},{"name":"Messages"},{"name":"Points"},{"name":"Powerups"},{"name":"Threads"},{"name":"Users"}]}
